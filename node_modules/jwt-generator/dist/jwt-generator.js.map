{"version":3,"sources":["../src/jwt-generator.js"],"names":["EXPIRATION_IN_SECONDS","jwt","require","Promise","http","url","Joi","cacheOptions","max","maxAge","Math","floor","maxElements","cache","schemaGetKey","object","keys","subject","string","required","audience","payload","any","issuer","loginUrl","privateKey","getKey","options","validate","JSON","stringify","deleteJWTPayloadKeys","Object","assign","iss","sub","aud","exp","nbf","iat","jti","getSubject","JWTGenerator","expiresIn","key","token","get","resolve","sign","algorithm","method","auth","bearer","json","tap","set","del","make","module","exports"],"mappings":"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","file":"jwt-generator.js","sourcesContent":["const EXPIRATION_IN_SECONDS = 300\nconst jwt = require('jsonwebtoken')\nconst Promise = require('bluebird')\nconst http = require('http-as-promised')\nconst url = require('url')\nconst Joi = require('joi-browser')\n\nconst cacheOptions = {\n  max: 10,\n  maxAge: Math.floor(EXPIRATION_IN_SECONDS * 1000 * 0.9),\n  maxElements: 1000\n}\n\nconst cache = require('lru-cache')(cacheOptions)\n\nconst schemaGetKey = Joi.object().keys({\n  subject: Joi.string().required(),\n  audience: Joi.string().required(),\n  payload: Joi.any().required(),\n  issuer: Joi.string().required(),\n  loginUrl: Joi.string().required(),\n  privateKey: Joi.string().required()\n})\nconst getKey = (options) => {\n  Joi.validate(options, schemaGetKey)\n  const {subject, audience, payload, issuer, loginUrl, privateKey} = options\n\n  return `issuer: ${issuer}\nloginUrl: ${loginUrl}\nprivateKey: ${privateKey}\nsubject: ${subject}\naudience: ${audience}\npayload: ${JSON.stringify(payload)}`\n}\n\nconst deleteJWTPayloadKeys = (payload) => {\n  payload = Object.assign({}, payload)\n  delete payload.iss\n  delete payload.sub\n  delete payload.aud\n  delete payload.exp\n  delete payload.nbf\n  delete payload.iat\n  delete payload.jti\n\n  return payload\n}\n\nconst getSubject = (subject) => {\n  return subject ? JSON.stringify(subject) : subject\n}\n\nclass JWTGenerator {\n  constructor (loginUrl, privateKey, issuer) {\n    this.issuer = issuer\n    this.loginUrl = loginUrl\n    this.privateKey = privateKey\n  }\n\n  make ({subject, audience, payload, expiresIn}) {\n    subject = getSubject(subject)\n    payload = deleteJWTPayloadKeys(payload)\n\n    const key = getKey({\n      subject,\n      audience,\n      payload,\n      issuer: this.issuer,\n      loginUrl: this.loginUrl,\n      privateKey: this.privateKey\n    })\n    let token = cache.get(key)\n    if (token) {\n      return Promise.resolve(token)\n    }\n\n    token = jwt.sign(\n      payload,\n      this.privateKey,\n      {\n        algorithm: 'RS256',\n        audience: audience || 'urn:home-automation/*',\n        expiresIn: expiresIn || EXPIRATION_IN_SECONDS, /* default: ten minutes */\n        issuer: this.issuer,\n        subject\n      }\n    )\n\n    return Promise\n      .resolve(http({\n        url: url.resolve(this.loginUrl, 'tokens'),\n        method: 'POST',\n        auth: {\n          bearer: token\n        },\n        json: true,\n        resolve: 'body'\n      }))\n      .get('token')\n      .tap((token) => cache.set(key, token))\n  }\n\n  makeNew ({subject, audience, payload, expiresIn}) {\n    subject = getSubject(subject)\n    payload = deleteJWTPayloadKeys(payload)\n\n    const key = getKey({\n      subject,\n      audience,\n      payload,\n      issuer: this.issuer,\n      loginUrl: this.loginUrl,\n      privateKey: this.privateKey\n    })\n    cache.del(key)\n    return this.make({subject, audience, payload, expiresIn})\n  }\n}\n\nmodule.exports = JWTGenerator\n"]}